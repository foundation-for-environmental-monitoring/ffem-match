plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.firebase.crashlytics'
}

def secretsFile = file(System.properties['user.home'] + '/.gradle/gradle.properties')
def secrets = new Properties()
if (secretsFile.exists()) {
    secrets.load(new FileInputStream(secretsFile))
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "io.ffem.match"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 146
        versionName "0.16"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = "1.8" }

    signingConfigs {
        release {
            if (secrets.getProperty('FFEM_RELEASE_STORE_FILE')) {
                storeFile file(secrets.getProperty('FFEM_RELEASE_STORE_FILE'))
                storePassword secrets.getProperty('FFEM_RELEASE_STORE_PASSWORD')
                keyAlias secrets.getProperty('FFEM_RELEASE_KEY_ALIAS')
                keyPassword secrets.getProperty('FFEM_RELEASE_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        debug {
            resValue("bool", "FIREBASE_ANALYTICS_ENABLED", "false")
        }
        release {
            if (secrets.getProperty('FFEM_RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.release
            }
            minifyEnabled(true)
            shrinkResources true
            zipAlignEnabled true
            resValue("bool", "FIREBASE_ANALYTICS_ENABLED", "true")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" +
                    (System.currentTimeMillis()) + "L)"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "ffem-lite-${variant.versionCode}.apk"
                }
            }
        }
    }

    defaultConfig {
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "INSTRUMENTED_TEST_RUNNING",
                "new java.util.concurrent.atomic.AtomicBoolean(false)"
        buildConfigField "Boolean", "TAKE_SCREENSHOTS", "false"
        buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + 0L + ")"
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "USE_SCREEN_PINNING",
                "new java.util.concurrent.atomic.AtomicBoolean(true)"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }

    kapt {
        correctErrorTypes true
    }
    namespace 'io.ffem.lite'
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"

    implementation project(path: ':scanner')

    // Support
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    implementation 'androidx.core:core-splashscreen:1.0.0'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation("androidx.compose.ui:ui-tooling:$compose_version")
    implementation 'androidx.compose.material3:material3:1.1.0-alpha02'
    implementation 'androidx.activity:activity-compose:1.6.1'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'com.github.luizgrp:SectionedRecyclerViewAdapter:v3.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.4'

    implementation 'com.google.android.play:core:1.10.3'

    // Room
    implementation 'androidx.room:room-runtime:2.4.3'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    kapt 'androidx.room:room-compiler:2.4.3'
    implementation 'com.github.ueen:RoomAssetHelper:1.2'

    // Location
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.3')
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-appcheck-debug:16.1.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    releaseImplementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Arduino
    implementation 'me.aflak.libraries:arduino:1.4.5'

    // Math
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // Graph
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // CameraX
    def camerax_version = "1.3.0-alpha01"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"

    // Logs
    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.4"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.4'
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.5.0') {
        exclude group: 'com.android.support'
        exclude group: 'javax.inject'
    }

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.7.3'

    // UIAutomator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}
apply plugin: 'com.google.gms.google-services'